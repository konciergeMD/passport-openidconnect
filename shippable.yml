language: node_js

node_js:
    - 12.16.1

build:
  pre_ci:
    - aws ecr get-login --no-include-email --region us-east-1 --registry-ids 063473290800 | bash

  pre_ci_boot:
    image_name: 063473290800.dkr.ecr.us-east-1.amazonaws.com/ci-build-image/shippable-all
    image_tag: v1
    pull: true

  ci:
    - source /setup.sh
    - echo "--ignore-engines true" > .yarnrc
    - ${BUILD_SCRIPTS}/node/install-dependencies.sh
    - source ${BUILD_SCRIPTS}/node/version.sh
    - yarn test
    - if [[ $BRANCH =~ ^master$|^develop$|^release/.*$ ]]; then ${BUILD_SCRIPTS}/sonar-scan.sh -o ; fi

  # uncomment this step once test results are being sent as output
  # post_ci:
  #   - cp ./test-results.xml shippable/testresults

  on_success:
    # uncomment this step once test results are being sent as output
    # - cp ./coverage/cobertura-coverage.xml shippable/codecoverage
    - if [ "$IS_PRELEASE" = "true" ]; then npm run build; npm publish; elif [ "$IS_RELEASE" = "true" ]; then NODE_ENV=production npm run build; npm publish; fi

integrations:
  generic:
    - integrationName: sonar

  hub:
    - integrationName: acp-artifactory
      type: artifactory

  notifications:
    # (optional) switch off email notifications
    - integrationName: email
      type: email
      on_success: never
      on_failure: never
      on_pull_request: never

    # (optional) Set slack notifications
    - integrationName: accolade-slack
      type: slack
      recipients: #FILL IN: Who to notify (#channel or @user.name)
        - "#atlas-dev-alerts"
      on_success: always
      on_failure: always
      on_pull_request: always
